<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NosFramework.Common</name>
    </assembly>
    <members>
        <member name="T:NetowlsStudio.Sdk.Collections.IPageCollection`1">
            <summary> 定义了带有分页信息的集合接口。 </summary>
            <typeparam name="T"> 行对象类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Collections.IPageCollection`1.Rows">
            <summary> 行集合。 </summary>
            <value> 获取 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 类型的对象实例，用于表示行集合。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Collections.IPageCollection`1.TotalRowsNumber">
            <summary> 总数据行数。 </summary>
            <value> 设置或获取一个值，用于表示总数据行数。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Collections.PageCollection`1">
            <summary> 提供了包含了分页信息的集合。 </summary>
            <typeparam name="T"> 行元素类型。 </typeparam>
        </member>
        <member name="M:NetowlsStudio.Sdk.Collections.PageCollection`1.#ctor">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Collections.PageCollection`1" /> 类型的对象实例。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Collections.PageCollection`1.#ctor(System.Int64,System.Collections.Generic.IEnumerable{`0})">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Collections.PageCollection`1" /> 类型的对象实例。 </summary>
            <param name="totalRowsNumber"> 总数据行数。 </param>
            <param name="rows"> 行集合。 </param>
        </member>
        <member name="P:NetowlsStudio.Sdk.Collections.PageCollection`1.Rows">
            <summary> 行集合。 </summary>
            <value> 获取 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 类型的对象实例，用于表示行集合。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Collections.PageCollection`1.TotalRowsNumber">
            <summary> 总数据行数。 </summary>
            <value> 设置或获取一个值，用于表示总数据行数。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Collections.PageCollection`1.NetowlsStudio#Sdk#Collections#IPageCollection{T}#Rows">
            <summary> 行集合。 </summary>
            <value> 获取 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 类型的对象实例，用于表示行集合。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Configuration.ISdkIntegrationInterfaceExtensions">
            <summary> 为 <see cref="T:NetowlsStudio.Sdk.ISdkIntegrationInterface" /> 类型提供的扩展方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.ISdkIntegrationInterfaceExtensions.AddMacro(NetowlsStudio.Sdk.ISdkIntegrationInterface,NetowlsStudio.Sdk.Configuration.Macro)">
            <summary> 增加一个宏命令参数。 </summary>
            <param name="sdk"> 实现了 <see cref="T:NetowlsStudio.Sdk.ISdkIntegrationInterface" /> 类型接口的对象实例。 </param>
            <param name="macro">
            宏命令参数。
            <para> <see cref="T:NetowlsStudio.Sdk.Configuration.Macro" /> 类型的对象实例。 </para>
            </param>
            <returns> 实现了 <see cref="T:NetowlsStudio.Sdk.ISdkIntegrationInterface" /> 类型接口的对象实例。 </returns>
        </member>
        <member name="T:NetowlsStudio.Sdk.Configuration.Macro">
            <summary>
            提供了宏命令参数相关的方法。
            <para> 密闭的，不可以从此类型派生。 </para>
            </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IKeyValuePair`2" />
            <remarks> 密闭的，不可以从此类型派生。 </remarks>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.Macro.#ctor">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Configuration.Macro" /> 类型的对象实例。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.Macro.#ctor(System.String)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Configuration.Macro" /> 类型的对象实例。 </summary>
            <param name="key"> 宏命令参数标识名称。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.Macro.#ctor(System.String,System.String)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Configuration.Macro" /> 类型的对象实例。 </summary>
            <param name="key"> 宏命令参数标识名称。 </param>
            <param name="value"> 宏命令参数值。 </param>
        </member>
        <member name="P:NetowlsStudio.Sdk.Configuration.Macro.Key">
            <summary> 宏命令参数标识名称。 </summary>
            <value> 设置或获取一个字符串，用于表示宏命令参数标识名称。 </value>
            <exception cref="T:NetowlsStudio.Sdk.Configuration.NullMacroKeyException" />
        </member>
        <member name="P:NetowlsStudio.Sdk.Configuration.Macro.Value">
            <summary> 宏命令参数值。 </summary>
            <value> 设置或获取一个字符串，用于表示宏命令参数值。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Configuration.MacroDictionary">
            <summary>
            提供了宏命令参数字典集合相关的方法。
            <para> 密闭的，不可以从此类型派生。 </para>
            </summary>
            <seealso cref="T:System.Collections.Generic.Dictionary`2" />
            <seealso cref="T:NetowlsStudio.Sdk.Configuration.Macro" />
            <remarks> 密闭的，不可以从此类型派生。 </remarks>
        </member>
        <member name="F:NetowlsStudio.Sdk.Configuration.MacroDictionary.Macros">
            <summary> 宏命令参数字典集合。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.MacroDictionary.#ctor">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Configuration.MacroDictionary" /> 类型的对象实例。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.MacroDictionary.#ctor(System.Collections.Generic.IEnumerable{NetowlsStudio.Sdk.Configuration.Macro})">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Configuration.MacroDictionary" /> 类型的对象实例。 </summary>
            <param name="macros"> 用于初始化的 <see cref="T:NetowlsStudio.Sdk.Configuration.Macro" /> 类型的对象实例集合。 </param>
        </member>
        <member name="T:NetowlsStudio.Sdk.Configuration.NullMacroKeyException">
            <summary>
            当宏命令参数标识名称等于 <c> null </c>、 <see cref="F:System.String.Empty" /> 或者空白符时，将引发此类型的异常。
            <para> 密闭的，不可以从此类型派生。 </para>
            </summary>
            <seealso cref="T:System.Exception" />
            <remarks> 密闭的，不可以从此类型派生。 </remarks>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.NullMacroKeyException.#ctor">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Configuration.NullMacroKeyException" /> 类型的对象实例。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.NullMacroKeyException.#ctor(System.Exception)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Configuration.NullMacroKeyException" /> 类型的对象实例。 </summary>
            <param name="innerException"> 引发了此异常的 <see cref="T:System.Exception" /> 类型的对象实例。 </param>
        </member>
        <member name="T:NetowlsStudio.Sdk.Configuration.StringExtensions">
            <summary> 为 <see cref="T:System.String" /> 类型提供的与宏命令参数相关的扩展方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Configuration.StringExtensions.ReplaceMacroValue(System.String)">
            <summary> 替换字符串中的宏命令参数。 </summary>
            <param name="s"> 需要替换的字符串。 </param>
            <returns> 替换后的字符串。 </returns>
        </member>
        <member name="T:NetowlsStudio.Sdk.Data.DataSetExtensions">
            <summary> 为 <see cref="T:System.Data.DataSet" /> 类型提供的扩展方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Data.DataSetExtensions.HasData(System.Data.DataSet)">
            <summary> 用于校验 <paramref name="dataSet" /> 是否包含数据。 </summary>
            <param name="dataSet"> 用于校验的 <see cref="T:System.Data.DataSet" /> 类型的对象实例。 </param>
            <returns>
            如果 <paramref name="dataSet" /> 不等于 null，且 <c> <paramref name="dataSet" />.Tables.Count </c> 大于 0 时，返回 <c> true
            </c>；否则返回 <c> false </c>。
            </returns>
            <seealso cref="T:System.Data.DataSet" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Data.DataTableExtensions">
            <summary> 为 <see cref="T:System.Data.DataTable" /> 类型提供的扩展方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Data.DataTableExtensions.HasRows(System.Data.DataTable)">
            <summary> 用于校验 <paramref name="table" /> 是否有数据。 </summary>
            <param name="table"> <see cref="T:System.Data.DataTable" /> 类型的对象实例。 </param>
            <returns>
            如果 <paramref name="table" /> 不等于 <c> null </c>，且 <c> <paramref name="table" />.Rows.Count </c> 大于 0 时，返回 <c> true
            </c>；否则返回 <c> false </c>。
            </returns>
            <seealso cref="T:System.Data.DataTable" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Data.DbProviderNameDefaults">
            <summary> 提供了 ADO.NET 数据库访问程序命名相关的默认值。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.DefaultDbProvider">
            <summary> 默认的 ADO.NET 数据库访问程序名称，等同于 <see cref="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.SQLServer" />。 </summary>
            <seealso cref="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.SQLServer" />
        </member>
        <member name="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.Firebird">
            <summary> Firebird 数据库访问程序名称。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.IBMDB2">
            <summary> IBM DB2 数据库访问程序名称。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.MySQL">
            <summary> MySQL 数据库访问程序名称。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.OracleDatabase">
            <summary> Oracle Database 数据库访问程序名称。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.PostgreSQL">
            <summary> PostgreSQL 数据库访问程序名称。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.SQLite">
            <summary> SQLite 数据库访问程序名称。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Data.DbProviderNameDefaults.SQLServer">
            <summary> Microsoft SQL Server 数据库访问程序名称。 </summary>
        </member>
        <member name="T:NetowlsStudio.Sdk.DateTimeFormatDefaults">
            <summary> 提供了与日期时间格式化相关的默认值。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.DateFormatString">
            <summary> 日期格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.DateFormatString2">
            <summary> 日期格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.DateFormatString3">
            <summary> 日期格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.DateFormatStringWithoutSeparator">
            <summary> 没有“-”号分割线的日期格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.DateFormatStringWithoutSpearator2">
            <summary> 没有“-”号分割线的日期格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.TimeFormatStringWithMinute">
            <summary> 包含了时、分的时间格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.DateTimeFormatString">
            <summary> 包含了时、分、秒的日期时间格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.DateTimeFormatStringWithMillisecond">
            <summary> 包含了时、分、秒、毫秒的日期格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.DateTimeFormatStringWithMinute">
            <summary> 包含了时、分的日期格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.TimeFormatString">
            <summary> 包含了时、分、秒的时间格式化字符串。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.DateTimeFormatDefaults.TimeFormatStringWithMillisecond">
            <summary> 包含了时、分、秒、毫秒的时间格式化字符串。 </summary>
        </member>
        <member name="T:NetowlsStudio.Sdk.ExceptionDescriptor">
            <summary> 提供了描述异常信息相关的方法。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.IExceptionDescriptor" />
        </member>
        <member name="M:NetowlsStudio.Sdk.ExceptionDescriptor.#ctor(System.Exception)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.ExceptionDescriptor" /> 类型的对象实例。 </summary>
            <param name="error">
            运行时异常。
            <para> 派生自 <see cref="T:System.Exception" /> 类型的对象实例。 </para>
            </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.ExceptionDescriptor.#ctor(System.Exception,System.String)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.ExceptionDescriptor" /> 类型的对象实例。 </summary>
            <param name="error">
            运行时异常。
            <para> 派生自 <see cref="T:System.Exception" /> 类型的对象实例。 </para>
            </param>
            <param name="scenes"> 引发异常时的场景描述信息。 </param>
        </member>
        <member name="P:NetowlsStudio.Sdk.ExceptionDescriptor.Error">
            <summary>
            运行时异常。
            <para> 派生自 <see cref="T:System.Exception" /> 类型的对象实例。 </para>
            </summary>
            <value> 获取 <see cref="T:System.Exception" /> 类型的对象实例，用于表示运行时异常。 </value>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="P:NetowlsStudio.Sdk.ExceptionDescriptor.ScenesDescription">
            <summary> 引发异常的场景描述信息。 </summary>
            <value> 获取一个字符串，用于表示引发异常的场景描述信息。 </value>
        </member>
        <member name="M:NetowlsStudio.Sdk.ExceptionDescriptor.GetDescription">
            <summary> 获取运行时异常描述信息。 </summary>
            <returns> 运行时异常描述信息。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.ExceptionDescriptor.ToString">
            <summary> 获取异常描述信息。 </summary>
            <returns> 异常描述信息。 </returns>
        </member>
        <member name="T:NetowlsStudio.Sdk.ExceptionExtensions">
            <summary> 为 <see cref="T:System.Exception" /> 类型提供的扩展方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.ExceptionExtensions.GetDescriptor(System.Exception,System.String)">
            <summary>
            获取异常描述。
            <para> <see cref="T:NetowlsStudio.Sdk.ExceptionDescriptor" /> 类型的对象实例。 </para>
            </summary>
            <param name="error"> 运行时异常。 </param>
            <param name="scenes"> 引发异常时的场景描述信息。 </param>
            <returns> <see cref="T:NetowlsStudio.Sdk.ExceptionDescriptor" /> 类型的对象实例。 </returns>
            <seealso cref="T:NetowlsStudio.Sdk.ExceptionDescriptor" />
        </member>
        <member name="M:NetowlsStudio.Sdk.ExceptionExtensions.GetDescriptor``1(System.Exception,System.String,System.Func{System.Exception,System.String,``0})">
            <summary>
            获取异常描述。
            <para> <typeparamref name="T" /> 类型的对象实例。 </para>
            </summary>
            <typeparam name="T"> 实现了 <see cref="T:NetowlsStudio.Sdk.IExceptionDescriptor" /> 类型接口的对象实例。 </typeparam>
            <param name="error"> 运行时异常。 </param>
            <param name="scenes"> 引发异常时的场景描述信息。 </param>
            <param name="func"> 构建 <typeparamref name="T" /> 类型的对象实例。 </param>
            <returns> <typeparamref name="T" /> 类型的对象实例。 </returns>
            <seealso cref="T:NetowlsStudio.Sdk.IExceptionDescriptor" />
        </member>
        <member name="T:NetowlsStudio.Sdk.IExceptionDescriptor">
            <summary> 定义了运行时异常描述信息的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.IExceptionDescriptor.Error">
            <summary>
            运行时异常。
            <para> 派生自 <see cref="T:System.Exception" /> 类型的对象实例。 </para>
            </summary>
            <value> 获取 <see cref="T:System.Exception" /> 类型的对象实例，用于表示运行时异常。 </value>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="P:NetowlsStudio.Sdk.IExceptionDescriptor.ScenesDescription">
            <summary> 引发异常的场景描述信息。 </summary>
            <value> 获取一个字符串，用于表示引发异常的场景描述信息。 </value>
        </member>
        <member name="M:NetowlsStudio.Sdk.IExceptionDescriptor.GetDescription">
            <summary> 获取运行时异常描述信息。 </summary>
            <returns> 运行时异常描述信息。 </returns>
        </member>
        <member name="T:NetowlsStudio.Sdk.IO.PathHelper">
            <summary> 提供了与路径相关的辅助方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.IO.PathHelper.DirectoryIsNotFound(System.IO.DirectoryInfo,System.Boolean)">
            <summary> 用于校验路径是否不存在。当路径 <paramref name="dir" /> 不存在时，可能引发一个 <see cref="T:System.IO.DirectoryNotFoundException" /> 类型的异常。 </summary>
            <param name="dir"> 需要校验的路径。 </param>
            <param name="autoCreateIsNotExists"> 当路径 <paramref name="dir" /> 不存在时，是否自动创建。 </param>
            <seealso cref="T:System.IO.DirectoryInfo" />
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.IO.PathHelper.FileIsNotFound(System.IO.FileInfo)">
            <summary> 用于校验文件是否不存在。当文件 <paramref name="file" /> 不存在时，将引发一个 <see cref="T:System.IO.FileNotFoundException" /> 类型的异常。 </summary>
            <param name="file"> 需要校验的文件信息。 </param>
            <exception cref="T:System.IO.FileNotFoundException"> </exception>
            <seealso cref="T:System.IO.FileInfo" />
        </member>
        <member name="T:NetowlsStudio.Sdk.ISdkContext">
            <summary> 定义了 SDK 上下文信息的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.ISdkContext.EnvironmentName">
            <summary> 运行时环境名称。 </summary>
            <value> 获取一个字符串，用于表示运行时环境名称。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.ISdkIntegrationInterface">
            <summary> 定义了 SDK 与 .NET 集成的接口。 </summary>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.CredentialsType">
            <summary> 定义了证件类型枚举类型。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.IDCard">
            <summary> 中华人民共和国居民身份证。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.Passport">
            <summary> 国际护照。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.HouseholdRegister">
            <summary> 中华人民共和国居民户口本。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.License">
            <summary> 中华人民共和国驾驶证。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.BankCard">
            <summary> 银行储蓄卡。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.CreditCard">
            <summary> 信用卡。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.MilitaryCard">
            <summary> 军官证。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.PoliceCard">
            <summary> 警官证。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.StudentCard">
            <summary> 学生证。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.Other">
            <summary> 其他的证件。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.CredentialsType.Unknwon">
            <summary> 未知的。 </summary>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.Edition">
            <summary> 定义了版本枚举类型。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Build">
            <summary> 构建版本。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Alpha">
            <summary> 内部测试版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Beta">
            <summary> 外部测试版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Preview">
            <summary> 预览版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.RC">
            <summary> 发布候选版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.RTM">
            <summary> 发布版本。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Standard">
            <summary> 标准版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Professional">
            <summary> 专业版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Enterprise">
            <summary> 企业版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Ultimate">
            <summary> 旗舰版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Platinum">
            <summary> 白金版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Developer">
            <summary> 开发人员版。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Edition.Community">
            <summary> 社区版。 </summary>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.Gender">
            <summary> 定义了性别枚举类型。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Gender.Male">
            <summary> 男性的。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Gender.Female">
            <summary> 女性的。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.Gender.Unknown">
            <summary> 未知的。 </summary>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IAlias">
            <summary> 定义了别名信息的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IAlias.Alias">
            <summary> 别名。 </summary>
            <value> 设置或获取一个字符串，用于表示别名。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IBuildInState`1">
            <summary> 定义了内置状态的接口。 </summary>
            <typeparam name="T"> 内置状态值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IBuildInState`1.IsBuildin">
            <summary> 是否为内置的。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否为内置的。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IBuildInState">
            <summary> 定义了内置状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IBuildInState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IChangedTrace`1">
            <summary> 定义了信息变更追踪的接口。 </summary>
            <typeparam name="TUserId"> 执行变更的用户标识类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IChangedTrace`1.CreatedTime">
            <summary> 首次创建时间。 </summary>
            <value> 设置或获取一个值，用于表示首次创建时间。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IChangedTrace`1.CreatorId">
            <summary> 首次创建人唯一标识。 </summary>
            <value> 设置或获取一个值，用于表示首次创建人唯一标识。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IChangedTrace`1.LatestModifiedTime">
            <summary> 最后一次修改时间。 </summary>
            <value> 设置或获取一个值，用于表示最后一次修改时间。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IChangedTrace`1.LatestModifierId">
            <summary> 最后一次修改信息的用户标识。 </summary>
            <value> 设置或获取一个值，用于表示最后一次修改信息的用户标识。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.ICode">
            <summary> 定义了编码的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.ICode.Code">
            <summary> 编码值。 </summary>
            <value> 设置或获取一个字符串，用于表示编码值。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.ICredentialsInfo">
            <summary> 定义了证件信息的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.ICredentialsInfo.CredentialsNumber">
            <summary> 证件号码。 </summary>
            <value> 设置或获取一个字符串，用于表示证件号码。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.ICredentialsInfo.CredentialsType">
            <summary> 证件类型。 </summary>
            <value>
            设置或获取一个值，用于表示证件类型。
            <para> <see cref="P:NetowlsStudio.Sdk.Objects.ICredentialsInfo.CredentialsType" /> 中的一个或几个值。 </para>
            </value>
            <seealso cref="P:NetowlsStudio.Sdk.Objects.ICredentialsInfo.CredentialsType" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IDefaultState`1">
            <summary> 定义了默认值状态的接口。 </summary>
            <typeparam name="T"> 默认值状态值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IDefaultState`1.IsDefault">
            <summary> 是否为默认的。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否为默认的。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IDefaultState">
            <summary> 定义了默认值状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IDefaultState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IDescription">
            <summary> 定义了描述信息的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IDescription.Description">
            <summary> 描述、备注信息。 </summary>
            <value> 设置或获取一个字符串，用于表示描述、备注信息。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IDisplayName">
            <summary> 定义了显示名称的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IDisplayName.DisplayName">
            <summary> 显示名称。 </summary>
            <value> 设置或获取一个字符串，用于表示显示名称。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IEditableState`1">
            <summary> 定义了可编辑状态的接口。 </summary>
            <typeparam name="T"> 可编辑状态类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IEditableState`1.CanEdit">
            <summary> 是否可以编辑。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否可以编辑。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IEditableState">
            <summary> 定义了可编辑状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IEditableState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IEnableState`1">
            <summary> 定义了是否可用状态的接口。 </summary>
            <typeparam name="T"> 状态值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IEnableState`1.Enabled">
            <summary> 是否可用。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否可用。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IEnableState">
            <summary> 定义了是否可用状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IEnableState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IFrozenState`1">
            <summary> 定义了冻结状态的接口。 </summary>
            <typeparam name="T"> 冻结状态值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IFrozenState`1.IsFrozen">
            <summary> 是否已经被冻结。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否已经被冻结。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IFrozenState">
            <summary> 定义了冻结状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IFrozenState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IFullName">
            <summary> 定义了完整名称信息的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IName" />
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IFullName.FirstName">
            <summary> 名字。 </summary>
            <value> 设置或获取一个字符串，用于表示名字。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IFullName.FullName">
            <summary> 姓名。 </summary>
            <value> 设置或获取一个字符串，用于表示姓名。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IFullName.LastName">
            <summary> 姓氏。 </summary>
            <value> 设置或获取一个字符串，用于表示姓氏。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IGender`1">
            <summary> 定义了性别信息的接口。 </summary>
            <typeparam name="T"> 用于表示性别信息的值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IGender`1.Gender">
            <summary> 性别信息。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示性别信息。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IGender">
            <summary> 定义了性别信息的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IGender`1" />
            <seealso cref="T:NetowlsStudio.Sdk.Objects.Gender" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IKey`1">
            <summary> 定义了标识名称的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IKey`1.Key">
            <summary> 标识名称。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示标识名称。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IKeyValuePair`2">
            <summary> 定义了键值对的接口。 </summary>
            <typeparam name="TKey"> 标识名称类型。 </typeparam>
            <typeparam name="TValue"> 值类型 </typeparam>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IKey`1" />
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IKeyValuePair`2.Value">
            <summary> 值。 </summary>
            <value> 设置或获取 <typeparamref name="TValue" /> 类型的对象实例，用于表示值。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.ILockState`1">
            <summary> 定义了锁定状态的接口。 </summary>
            <typeparam name="T"> 锁定状态值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.ILockState`1.IsLocked">
            <summary> 是否已经被锁定。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否已经被锁定。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.ILockState">
            <summary> 定义了锁定状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.ILockState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IName">
            <summary> 定义了名称的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IName.Name">
            <summary> 名称。 </summary>
            <value> 设置或获取一个字符串，用于表示名称。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.INickName">
            <summary> 定义了昵称信息的接口。 </summary>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.INickName.NickName">
            <summary> 昵称。 </summary>
            <value> 设置或获取一个字符串，用于表示昵称。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IObjectId`1">
            <summary> 定义了对象标识的接口。 </summary>
            <typeparam name="T"> 对象标识类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IObjectId`1.Id">
            <summary> 对象标识。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例或值，用于表示对象标识。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IOptionalState`1">
            <summary> 定义了可选状态的接口。 </summary>
            <typeparam name="T"> 可选状态值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IOptionalState`1.IsOptional">
            <summary> 是否为可选的。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否为可选的。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IOptionalState">
            <summary> 定义了可选状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IOptionalState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IRemoveState`1">
            <summary> 定义了是否逻辑删除状态的接口。 </summary>
            <typeparam name="T"> 逻辑删除状态的值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IRemoveState`1.HasRemoved">
            <summary> 是否已经被逻辑删除。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否已经被逻辑删除。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IRemoveState">
            <summary> 定义了是否逻辑删除状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IRemoveState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.ISemanticVersionNumber">
            <summary> 定义了语义化版本号信息的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IVersionNumber`1" />
            <seealso cref="T:NetowlsStudio.Sdk.Objects.SemanticVersion" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IStrictVersionNumber">
            <summary>
                定义了严格版本号信息的接口。
            </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IVersionNumber`1"/>
            <seealso cref="T:System.Version"/>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IVersionNumber`1">
            <summary> 定义了版本号信息的接口。 </summary>
            <typeparam name="T"> 版本号类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IVersionNumber`1.Version">
            <summary> 版本号描述。 </summary>
            <value> 获取一个字符串，用于表示版本号描述。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IVersionNumber`1.VersionNumber">
            <summary> 版本号信息。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示版本号信息。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IVersionNumber">
            <summary> 定义了版本号信息的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IVersionNumber`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IVisibleState`1">
            <summary> 定义了是否可见状态的接口。 </summary>
            <typeparam name="T"> 可见状态值类型。 </typeparam>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.IVisibleState`1.Visible">
            <summary> 是否可见。 </summary>
            <value> 设置或获取 <typeparamref name="T" /> 类型的对象实例，用于表示是否可见。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.IVisibleState">
            <summary> 定义了是否可见状态的接口。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Objects.IVisibleState`1" />
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.RemoveState">
            <summary> 定义了逻辑删除状态枚举类型。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.RemoveState.NotRemove">
            <summary> 尚未删除。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.RemoveState.Removed">
            <summary> 已经被逻辑删除。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Objects.RemoveState.AsDeleted">
            <summary> 已经被逻辑删除，等同于物理删除。 </summary>
        </member>
        <member name="T:NetowlsStudio.Sdk.Objects.SemanticVersion">
            <summary>
            提供了语义化版本相关的方法。
            <para> 密闭的，不可以从此类型派生。 </para>
            </summary>
            <remarks> 密闭的，不可以从此类型派生。 </remarks>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.#ctor">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Objects.SemanticVersion" /> 类型的对象实例。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.#ctor(NetowlsStudio.Sdk.Objects.Edition)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Objects.SemanticVersion" /> 类型的对象实例。 </summary>
            <param name="edition"> 版本描述。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.#ctor(System.Int32,NetowlsStudio.Sdk.Objects.Edition)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Objects.SemanticVersion" /> 类型的对象实例。 </summary>
            <param name="major"> 主要版本号。 </param>
            <param name="edition"> 版本描述。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.#ctor(System.Int32,System.Int32,NetowlsStudio.Sdk.Objects.Edition)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Objects.SemanticVersion" /> 类型的对象实例。 </summary>
            <param name="major"> 主要版本号。 </param>
            <param name="minor"> 次要版本号。 </param>
            <param name="edition"> 版本描述。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32,NetowlsStudio.Sdk.Objects.Edition)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Objects.SemanticVersion" /> 类型的对象实例。 </summary>
            <param name="major"> 主要版本号。 </param>
            <param name="minor"> 次要版本号。 </param>
            <param name="build"> 构建版本号。 </param>
            <param name="edition"> 版本描述。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,NetowlsStudio.Sdk.Objects.Edition)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Objects.SemanticVersion" /> 类型的对象实例。 </summary>
            <param name="major"> 主要版本号。 </param>
            <param name="minor"> 次要版本号。 </param>
            <param name="build"> 构建版本号。 </param>
            <param name="revision"> 修正版本号。 </param>
            <param name="edition"> 版本描述。 </param>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.SemanticVersion.Build">
            <summary> 构建版本号数字。 </summary>
            <value> 设置或获取一个值，用于表示构建版本号数字。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.SemanticVersion.Edition">
            <summary>
            版本描述信息。
            <para> <see cref="P:NetowlsStudio.Sdk.Objects.SemanticVersion.Edition" /> 中的一个值。 </para>
            </summary>
            <value> 设置或获取一个值，用于表示版本描述信息。 </value>
            <seealso cref="P:NetowlsStudio.Sdk.Objects.SemanticVersion.Edition" />
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.SemanticVersion.Major">
            <summary> 主要版本号数字。 </summary>
            <value> 设置或获取一个值，用于表示主要版本号数字。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.SemanticVersion.Minor">
            <summary> 次要版本号数字。 </summary>
            <value> 设置或获取一个值，用于表示次要版本号数字。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Objects.SemanticVersion.Revision">
            <summary> 修正版本号数字。 </summary>
            <value> 设置或获取一个值，用于表示修正版本号数字。 </value>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.ToString">
            <summary> 获取语义化版本描述。 </summary>
            <returns> 语义化版本描述。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.ToVersion">
            <summary> 转换成 .NET 内置的 <see cref="T:System.Version" /> 类型的对象实例。 </summary>
            <returns> <see cref="T:System.Version" /> 类型的对象实例。 </returns>
            <seealso cref="T:System.Version" />
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.NewBuildNumber">
            <summary> 获取新的构建版本号。 </summary>
            <returns> 构建版本号数字。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.Objects.SemanticVersion.NewRevisionNumber">
            <summary> 获取新的修正版本号数字。 </summary>
            <returns> 修正版本号数字。 </returns>
        </member>
        <member name="T:NetowlsStudio.Sdk.RuntimeEnvironment">
            <summary> 定义了预置的运行时环境枚举类型。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.RuntimeEnvironment.Development">
            <summary> 开发环境。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.RuntimeEnvironment.Test">
            <summary> 测试环境。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.RuntimeEnvironment.Alpha">
            <summary> 内测环境。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.RuntimeEnvironment.Beta">
            <summary> 公测环境。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.RuntimeEnvironment.Sandbox">
            <summary> 沙箱环境。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.RuntimeEnvironment.Preview">
            <summary> 预览环境。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.RuntimeEnvironment.Production">
            <summary> 生产环境。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.RuntimeEnvironment.Release">
            <summary> 发布环境。 </summary>
        </member>
        <member name="T:NetowlsStudio.Sdk.Security.Cryptography.HashAlgorithmExtensions">
            <summary> 为 <see cref="T:System.Byte" /> 类型提供的哈希算法扩展方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Security.Cryptography.HashAlgorithmExtensions.ComputeHash(System.Byte[],System.Security.Cryptography.HashAlgorithm)">
            <summary> 计算哈希数据。 </summary>
            <param name="data"> 需要计算的字节数据。 </param>
            <param name="hAlgorithm"> 派生自 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 类型的对象实例。 </param>
            <returns> 哈希计算后的字节数组。 </returns>
            <exception cref="T:System.ObjectDisposedException"> </exception>
        </member>
        <member name="T:NetowlsStudio.Sdk.Security.Cryptography.HashAlgorithmFactory">
            <summary> 提供了哈希算法相关的方法。 </summary>
        </member>
        <member name="F:NetowlsStudio.Sdk.Security.Cryptography.HashAlgorithmFactory.MD5ServiceProvider">
            <summary> <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /> 类型的对象实例。 </summary>
            <seealso cref="T:System.Security.Cryptography.MD5" />
            <seealso cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" />
        </member>
        <member name="F:NetowlsStudio.Sdk.Security.Cryptography.HashAlgorithmFactory.SHA1ServiceProvider">
            <summary> <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /> 类型的对象实例。 </summary>
            <seealso cref="T:System.Security.Cryptography.SHA1" />
            <seealso cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />
        </member>
        <member name="F:NetowlsStudio.Sdk.Security.Cryptography.HashAlgorithmFactory.SHA256ServiceProvider">
            <summary> <see cref="T:System.Security.Cryptography.SHA256CryptoServiceProvider" /> 类型的对象实例。 </summary>
            <seealso cref="T:System.Security.Cryptography.SHA256" />
            <seealso cref="T:System.Security.Cryptography.SHA256CryptoServiceProvider" />
        </member>
        <member name="F:NetowlsStudio.Sdk.Security.Cryptography.HashAlgorithmFactory.SHA512ServiceProvider">
            <summary> <see cref="T:System.Security.Cryptography.SHA512CryptoServiceProvider" /> 类型的对象实例。 </summary>
            <seealso cref="T:System.Security.Cryptography.SHA512" />
            <seealso cref="T:System.Security.Cryptography.SHA512CryptoServiceProvider" />
        </member>
        <member name="T:NetowlsStudio.Sdk.StringExtensions">
            <summary> 为 <see cref="T:System.String" /> 类型提供的扩展方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsBoolean(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Boolean" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Boolean" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.Boolean" /> 类型的值。
            <para> 当 <see cref="M:System.Boolean.TryParse(System.String,System.Boolean@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsBoolean(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Boolean" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Boolean" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.Boolean.TryParse(System.String,System.Boolean@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.Boolean" /> 值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Boolean.TryParse(System.String,System.Boolean@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsBoolean(System.String,System.Boolean)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Boolean" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Boolean" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.Boolean.TryParse(System.String,System.Boolean@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.Boolean" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.FromBase64String(System.String)">
            <summary> 从 Base64 字符串获取字节数组。 </summary>
            <param name="s"> Base64 编码的字符串。 </param>
            <returns> 字节数组。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.GetBytes(System.String)">
            <summary> 使用 UTF-8 编码器获取字符串 <paramref name="s" /> 的字节数组。 </summary>
            <param name="s"> 字符串。 </param>
            <returns> 字节数组。 </returns>
            <seealso cref="T:System.Text.UTF8Encoding" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.GetBytes(System.String,System.Text.Encoding)">
            <summary> 使用指定的编码器获取字符串 <paramref name="s" /> 的字节数组。 </summary>
            <param name="s"> 字符串。 </param>
            <param name="encoding">
            编码器。
            <para> 派生自 <see cref="T:System.Text.Encoding" /> 类型的对象实例。 </para>
            </param>
            <returns> 字节数组。 </returns>
            <seealso cref="T:System.Text.Encoding" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.GetString(System.Byte[])">
            <summary> 使用 UTF-8 编码器获取字符串。 </summary>
            <param name="data"> 字节数组。 </param>
            <returns> 字符串。 </returns>
            <seealso cref="T:System.Text.UTF8Encoding" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.GetString(System.Byte[],System.Text.Encoding)">
            <summary> 使用指定的编码器获取字符串。 </summary>
            <param name="data"> 字节数组。 </param>
            <param name="encoding">
            编码器。
            <para> 派生自 <see cref="T:System.Text.Encoding" /> 类型的对象实例。 </para>
            </param>
            <returns> 字符串。 </returns>
            <seealso cref="T:System.Text.Encoding" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.IgnoreCaseEquals(System.String,System.String)">
            <summary> 用于校验 <paramref name="s" /> 和 <paramref name="s1" /> 忽略大小写后是否相等。 </summary>
            <param name="s"> 字符串。 </param>
            <param name="s1"> 需要比较的字符串。 </param>
            <returns> 如果忽略了大小写后相等，返回 <c> true </c>；否则返回 <c> false </c>。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.ToBase64String(System.Byte[])">
            <summary> 将字节数组转换成 Base64 编码的字符串。 </summary>
            <param name="data"> 字节数组。 </param>
            <returns> Base64 编码字符串。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.ToHexString(System.Byte[],System.Boolean)">
            <summary> 将字节数组装换成十六进制字符串。 </summary>
            <param name="data"> 字节数组。 </param>
            <param name="lowerCase"> 是否转换成小写。 </param>
            <returns> 十六进制字符串。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsDateTime(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.DateTime" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.DateTime" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.DateTime" /> 类型的值。
            <para> 当 <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsDateTime(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.DateTime" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.DateTime" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.DateTime" /> 值；否则返回 <c>
            null </c>。
            </returns>
            <seealso cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsDateTime(System.String,System.DateTime)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.DateTime" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.DateTime" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.DateTime" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsDecimal(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Decimal" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Decimal" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.Decimal" /> 类型的值。
            <para> 当 <see cref="M:System.Decimal.TryParse(System.String,System.Decimal@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsDecimal(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Decimal" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Decimal" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.Decimal.TryParse(System.String,System.Decimal@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.Decimal" /> 值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Decimal.TryParse(System.String,System.Decimal@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsDecimal(System.String,System.Decimal)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Decimal" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Decimal" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.Decimal.TryParse(System.String,System.Decimal@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.Decimal" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsDouble(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Double" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Double" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.Double" /> 类型的值。
            <para> 当 <see cref="M:System.Double.TryParse(System.String,System.Double@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsDouble(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Double" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Double" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.Double.TryParse(System.String,System.Double@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.Double" /> 值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Double.TryParse(System.String,System.Double@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsDouble(System.String,System.Double)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Double" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Double" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.Double.TryParse(System.String,System.Double@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.Double" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsEnum``1(System.String,System.Boolean)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <typeparamref name="TEnum" /> 类型的值。 </summary>
            <param name="s"> 等效于 <typeparamref name="TEnum" /> 类型的字符串。 </param>
            <param name="ignoreCase"> 是否忽略字符串的大小写。 </param>
            <returns>
            <typeparamref name="TEnum" /> 类型的值。
            <para>
            当 <see cref="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。
            </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsEnum``1(System.String,System.Boolean)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <typeparamref name="TEnum" /> 类型的值。 </summary>
            <param name="s"> 等效于 <typeparamref name="TEnum" /> 类型的字符串。 </param>
            <param name="ignoreCase"> 是否忽略字符串的大小写。 </param>
            <returns>
            当 <see cref="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" /> 等于 <c> true </c>，将返回 <typeparamref name="TEnum" />
            值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsEnum``1(System.String,System.Boolean,``0)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <typeparamref name="TEnum" /> 类型的值。 </summary>
            <param name="s"> 等效于 <typeparamref name="TEnum" /> 类型的字符串。 </param>
            <param name="ignoreCase"> 是否忽略字符串中的大小写。 </param>
            <param name="default"> 当 <see cref="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <typeparamref name="TEnum" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsGuid(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Guid" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Guid" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.Guid" /> 类型的值。
            <para> 当 <see cref="M:System.Guid.TryParse(System.String,System.Guid@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsGuid(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Guid" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Guid" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.Guid.TryParse(System.String,System.Guid@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.Guid" /> 值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Guid.TryParse(System.String,System.Guid@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsGuid(System.String,System.Guid)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Guid" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Guid" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.Guid.TryParse(System.String,System.Guid@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.Guid" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsInt16(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int16" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int16" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.Int16" /> 类型的值。
            <para> 当 <see cref="M:System.Int16.TryParse(System.String,System.Int16@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsInt16(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int16" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int16" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.Int16.TryParse(System.String,System.Int16@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.Int16" /> 值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Int16.TryParse(System.String,System.Int16@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsInt16(System.String,System.Int16)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int16" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int16" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.Int16.TryParse(System.String,System.Int16@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.Int16" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsInt(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int32" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int32" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.Int32" /> 类型的值。
            <para> 当 <see cref="M:System.Int32.TryParse(System.String,System.Int32@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsInt(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int32" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int32" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.Int32.TryParse(System.String,System.Int32@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.Int32" /> 值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsInt(System.String,System.Int32)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int32" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int32" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.Int32.TryParse(System.String,System.Int32@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.Int32" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsInt64(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int64" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int64" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.Int64" /> 类型的值。
            <para> 当 <see cref="M:System.Int64.TryParse(System.String,System.Int64@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsInt64(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int64" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int64" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.Int64.TryParse(System.String,System.Int64@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.Int64" /> 值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Int64.TryParse(System.String,System.Int64@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsInt64(System.String,System.Int64)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Int64" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Int64" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.Int64.TryParse(System.String,System.Int64@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.Int64" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.AsSingle(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Single" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Single" /> 类型的字符串。 </param>
            <returns>
            <see cref="T:System.Single" /> 类型的值。
            <para> 当 <see cref="M:System.Single.TryParse(System.String,System.Single@)" /> 时，将引发一个 <see cref="T:System.InvalidCastException" /> 类型的异常。 </para>
            </returns>
            <exception cref="T:System.InvalidCastException"> </exception>
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsSingle(System.String)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Single" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Single" /> 类型的字符串。 </param>
            <returns>
            当 <see cref="M:System.Single.TryParse(System.String,System.Single@)" /> 等于 <c> true </c>，将返回 <see cref="T:System.Single" /> 值；否则返回 <c> null </c>。
            </returns>
            <seealso cref="M:System.Single.TryParse(System.String,System.Single@)" />
        </member>
        <member name="M:NetowlsStudio.Sdk.StringExtensions.SafeAsSingle(System.String,System.Single)">
            <summary> 将字符串 <paramref name="s" /> 转换成 <see cref="T:System.Single" /> 类型的值。 </summary>
            <param name="s"> 等效于 <see cref="T:System.Single" /> 类型的字符串。 </param>
            <param name="default"> 当 <see cref="M:System.Single.TryParse(System.String,System.Single@)" /> 等于 <c> false </c> 时，将返回此默认值。 </param>
            <returns> <see cref="T:System.Single" /> 类型的值。 </returns>
        </member>
        <member name="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult">
            <summary> 提供了异步方法返回值相关的方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult.#ctor">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" /> 类型的对象实例。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult.#ctor(System.Boolean)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" /> 类型的对象实例。 </summary>
            <param name="isSuccess"> 异步方法是否处理成功。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult.#ctor(System.Exception)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" /> 类型的对象实例。 </summary>
            <param name="error"> 异步方法执行过程中引发的异常。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult.#ctor(System.Boolean,System.Exception)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" /> 类型的对象实例。 </summary>
            <param name="isSuccess"> 异步方法是否处理成功。 </param>
            <param name="error"> 异步方法执行过程中引发的异常。 </param>
        </member>
        <member name="P:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult.Error">
            <summary>
            异步方法处理过程中引发的异常信息。
            <para> 派生自 <see cref="T:System.Exception" /> 类型的对象实例。 </para>
            </summary>
            <value> 获取 <see cref="T:System.Exception" /> 类型的对象实例，用于表示异步方法处理过程中引发的异常信息。 </value>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="P:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult.IsSuccess">
            <summary> 异步方法是否处理成功。 </summary>
            <value> 获取一个值，用于表示异步方法是否处理成功。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1">
            <summary> 提供了包含 <typeparamref name="TResult" /> 类型返回值结果异步方法返回值相关的方法。 </summary>
            <typeparam name="TResult"> 异步方法返回值类型。 </typeparam>
            <seealso cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" />
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1.#ctor">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1" /> 类型的对象实例。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1.#ctor(System.Exception)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1" /> 类型的对象实例。 </summary>
            <param name="error"> 异步方法执行过程中引发的异常。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1.#ctor(System.Boolean)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1" /> 类型的对象实例。 </summary>
            <param name="isSuccess"> 异步方法是否处理成功。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1.#ctor(System.Boolean,System.Exception)">
            <summary> 用于初始化一个 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1" /> 类型的对象实例。 </summary>
            <param name="isSuccess"> 异步方法是否处理成功。 </param>
            <param name="error"> 异步方法执行过程中引发的异常。 </param>
        </member>
        <member name="P:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1.Result">
            <summary> 异步方法返回值结果。 </summary>
            <value> 设置或获取 <typeparamref name="TResult" /> 类型的对象实例或值，用于表示异步方法返回值结果。 </value>
        </member>
        <member name="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder">
            <summary> 提供了构建 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" /> 类型的对象实例相关的方法。 </summary>
            <seealso cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" />
        </member>
        <member name="P:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder.Error">
            <summary> 异步作业中的异常。 </summary>
            <value> 设置或获取 <see cref="T:System.Exception" /> 类型的对象实例，用于表示异步作业中的异常。 </value>
        </member>
        <member name="P:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder.IsSuccess">
            <summary> 异步作业是否执行成功。 </summary>
            <value> 设置或获取一个值，用于表示异步作业是否执行成功。 </value>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder.Build">
            <summary> 构建 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" /> 类型的对象实例。 </summary>
            <returns> <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult" /> 类型的对象实例。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder.WithError(System.Exception)">
            <summary> 设置异常信息。 </summary>
            <param name="error"> <see cref="T:System.Exception" /> 类型的对象实例。 </param>
            <returns> <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder" /> 类型的对象实例。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder.WithSuccessState(System.Boolean)">
            <summary> 设置是否成功状态。 </summary>
            <param name="isSuccess"> 是否成功。 </param>
            <returns> <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder" /> 类型的对象实例。 </returns>
        </member>
        <member name="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1">
            <summary> 提供了构建 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1" /> 类型的对象实例相关的方法。 </summary>
            <typeparam name="TResult"> 异步结果类型。 </typeparam>
            <seealso cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder" />
        </member>
        <member name="P:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1.Result">
            <summary> 异步作业结果。 </summary>
            <value> 设置或获取 <typeparamref name="TResult" /> 类型的对象实例或值，用于表示异步作业结果。 </value>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1.Build">
            <summary> 构建 <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1" /> 类型的对象实例。 </summary>
            <returns> <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResult`1" /> 类型的对象实例。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1.WithError(System.Exception)">
            <summary> 设置异常信息。 </summary>
            <param name="error"> <see cref="T:System.Exception" /> 类型的对象实例。 </param>
            <returns> <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1" /> 类型的对象实例。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1.WithResult(`0)">
            <summary> 设置异步作业结果。 </summary>
            <param name="result"> <typeparamref name="TResult" /> 类型的结果。 </param>
            <returns> <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1" /> 类型的对象实例。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1.WithSuccessState(System.Boolean)">
            <summary> 设置是否成功状态。 </summary>
            <param name="isSuccess"> 是否成功。 </param>
            <returns> <see cref="T:NetowlsStudio.Sdk.Threading.Tasks.AsyncTaskResultBuilder`1" /> 类型的对象实例。 </returns>
        </member>
        <member name="T:NetowlsStudio.Sdk.Utilities.Guard">
            <summary> 提供了常用的守护方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Utilities.Guard.ArgumentIsNull(System.Object,System.String)">
            <summary>
            用于校验参数是否等 <c> null </c> 值。当 <paramref name="argValue" /> 等于 <c> null </c> 时，将引发一个
            <see cref="T:System.ArgumentNullException" /> 类型的异常。
            </summary>
            <param name="argValue"> 需要校验的参数值。 </param>
            <param name="argName"> 参数名称。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Utilities.Guard.SafeGet``1(System.Nullable{``0},``0)">
            <summary>
            获取 <typeparamref name="T" /> 类型的值。
            <para> 当 <paramref name="value" /> 等于 <c> null </c> 值时，将返回 <paramref name="defaultValue" />。 </para>
            </summary>
            <typeparam name="T"> 值类型。 </typeparam>
            <param name="value"> <see cref="T:System.Nullable`1" /> 类型的值。 </param>
            <param name="defaultValue"> <typeparamref name="T" /> 类型的值。 </param>
            <returns> <typeparamref name="T" /> 类型的值。 </returns>
        </member>
        <member name="M:NetowlsStudio.Sdk.Utilities.Guard.TrueThrow``1(System.Func{System.Boolean},System.Func{``0})">
            <summary> 当 <paramref name="where" /> 等于 <c> true </c> 时，将引发一个 <typeparamref name="TException" /> 类型的异常。 </summary>
            <typeparam name="TException"> 派生自 <see cref="T:System.Exception" /> 的类型。 </typeparam>
            <param name="where"> 条件表达式。 </param>
            <param name="error"> 创建 <typeparamref name="TException" /> 类型的对象实例的方法。 </param>
        </member>
        <member name="M:NetowlsStudio.Sdk.Utilities.Guard.TrueThrow``1(System.Boolean,System.Object[])">
            <summary> 当条件表达式 <paramref name="where" /> 等于 <c> true </c> 时，将引发一个 <typeparamref name="TException" /> 类型的异常。 </summary>
            <typeparam name="TException"> 派生自 <see cref="T:System.Exception" /> 的类型。 </typeparam>
            <param name="where"> 条件表达式。 </param>
            <param name="args"> 用于初始化一个 <typeparamref name="TException" /> 类型的对象实例的参数数组。 </param>
            <exception cref="T:System.Reflection.TargetInvocationException"> </exception>
            <exception cref="T:System.MethodAccessException"> </exception>
            <exception cref="T:System.MemberAccessException"> </exception>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"> </exception>
            <exception cref="T:System.MissingMethodException"> </exception>
            <exception cref="T:System.Runtime.InteropServices.COMException"> </exception>
            <exception cref="T:System.TypeLoadException"> </exception>
        </member>
        <member name="T:NetowlsStudio.Sdk.Utilities.StringHelper">
            <summary> 提供了 <see cref="T:System.String" /> 相关的辅助性方法。 </summary>
        </member>
        <member name="M:NetowlsStudio.Sdk.Utilities.StringHelper.IsNullOrEmpty(System.String,System.Boolean)">
            <summary> 用于校验字符串是否等于 <c> null </c>、 <see cref="F:System.String.Empty" /> 或者空白符。 </summary>
            <param name="s"> 需要校验的字符串。 </param>
            <param name="withWhitespaces"> 是否需要校验空白符。 </param>
            <returns>
            如果字符串 <paramref name="s" /> 等于 <c> null </c>、 <see cref="F:System.String.Empty" /> 或者空白符 (取决于
            <paramref name="withWhitespaces" />) 时，返回 <c> true </c>；否则返回 <c> false </c>。
            </returns>
            <seealso cref="M:System.String.IsNullOrEmpty(System.String)" />
            <seealso cref="M:System.String.IsNullOrWhiteSpace(System.String)" />
        </member>
    </members>
</doc>
